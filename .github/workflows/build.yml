name: Build and Analyze with Maven

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # SonarCloud needs the full history

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      
      # Step 1: Compile the code without running tests or packaging
      - name: Compile project
        run: mvn -B compile -Drat.skip=true -DskipTests

      # Step 2: Run the SonarCloud analysis on the compiled code
      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=Raygama_collections-demo \
            -Dsonar.organization=raygama \
            -Dsonar.host.url=https://sonarcloud.io

      - name: Get AI Analysis from Flowise
        id: flowise-analysis
        if: success()
        env:
          FLOWISE_BEARER_TOKEN: ${{ secrets.FLOWISE_BEARER_TOKEN }}
        run: |
          JSON_BODY=$(printf '{
            "question": "Analyze a sonar issue using your knowledge!",
            "overrideConfig": {
              "projectKey": "Raygama_collections-demo",
              "prNumber": "%s"
            }
          }' "${{ github.event.pull_request.number }}")
          
          ANALYSIS_RESULT=$(curl -s https://cloud.flowiseai.com/api/v1/prediction/ae8b5cb1-b90b-4f25-9395-a839e92e2bf6 \
               -X POST \
               -d "$JSON_BODY" \
               -H "Content-Type: application/json" \
               -H "Authorization: Bearer $FLOWISE_BEARER_TOKEN")
          
          # Use a unique delimiter to safely handle multi-line output
          EOF=$(openssl rand -hex 16)
          echo "analysis<<$EOF" >> "$GITHUB_OUTPUT"
          echo "$ANALYSIS_RESULT" >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"

      - name: Post Analysis to Pull Request
        uses: actions/github-script@v6
        if: success()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const analysisOutput = `${{ steps.flowise-analysis.outputs.analysis }}`;
            // Extract the text content from the Flowise JSON response
            const analysisText = JSON.parse(analysisOutput).text;

            const body = `### ðŸ¤– AI Technical Debt Analysis\n\n---\n\n${analysisText}`;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
